/* Positioning is hard. I'm leaving notes here so I can memorize the concepts enough to struggle through until I get it down.*/
/* Box Level Elements by default stack right on top of eachother!!! */

/* Position Property values: */
/* STATIC - Static tells the element to position itself using normal document flow (default)*/
/* RELATIVE - Relative positioning is still considered part of the normal document flow, but it allows you to tweak an elements position based on offset valzues you assign */
/* ABSOLUTE - Not normal document flow. It removes the element from normal flow and repositions it based on offset values given, allowing others to move into its old position */
/* INHERIT - inherits parent element values */
/* FIXED - Fixed elements are considered to be absolutely positioned but they're always positioned relative to the active view port*/

/* Float Property Values - Left, right, none, inherit */
/* Clear Property specifies what elements cannot float beside the cleared element and on which side. */
/* Clear Values - none (default), left, right, both, inherit */

/* Display Propert: grid; */
/* Draws a grid within a container (has horizonal rows and vertical columns)*/

html {
font-size:10px;
font-family: Dosis, sans-serif, Times New Roman; /* Didn't load the first font... I need to look into that... But this has been great to test the back up fonts! */
}

body {
	margin: auto;
	max-width: 1000px; /* I'm running 1920x1080 resolution on all of my computers. I'll center everything up nicely at some point. Should still fit nicely on that popular 1366x768 too.. not to say I won't test it though.*/
	background-color:black;
}

main {
		margin: auto;
}

header {
	text-align: center; /* Aligns header text to middle of its element*/
	color: #0000ff;
	background-color: #000000;
	border-style: solid;
	border-width: 0.2rem 0.2rem .5rem 0.2rem; /* Starting from left to right, TOP, RIGHT, BOTTOM LEFT*/
	border-bottom-color: #0000ff;
	margin: 5rem 5rem 5rem 5rem; /* If all sides are equal, one value alone is enough. But I like to define them all. I have trouble remembering the what 2 and 3 values affect.*/
	padding: 10px;
}

p {
	font-size: 2rem;
	color:darkslategray;
}

a {
	font-size: 2rem;
}

a:link {
	color: #00ff00;
	text-decoration: none;  /* "Text decoration is mostly used to remove underlines from links" Thanks w3 schools. */
}

a:visited {
	color: #800;
}

a:hover {
	color: #ff00ff;
	background-color: #0000ff;
	text-decoration: underline;
}

a:active {
	color: #ebebe0;
	background-color: #cc3300;
	text-decoration: none;
}


h1 {
	font-size: 4rem;
	color:darkslategray;

}

h2 {
		font-size: 2.5rem;
		color: darkslategray;
}

h3 {
	font-size: 2.2rem;
	color: darkslategray;

}

li {
	font-size: 1.8rem;
	line-height: 1.5;
	color:darkslategray;
}

figcaption {
 text-align: center;
 color: white;
 font-size: 2em;
}

 img {
	 display: block;
	 margin: 0px auto 0px auto;
}


footer {
	border-style: dashed;
	border-width: 1px 1px 1px 1px;
	border-color: gray;
	margin: auto;
	text-align: center;
}

/*  ==========		#id and .class section		==========  */

.box1 {}

.box2 {}

.box3 {}
